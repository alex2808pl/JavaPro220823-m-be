1. 
Реализуйте класс UnidirectionIntLinkedList, в есть следующие характериcтики:
- int size; (текущий размер списка)
- Node (структура для хранения первого элемента списка)
В классе Node инкапулированы характеристики:
- int item; (для хранения данных)
- Node next; (для хранения ссылки на следующий объект хранения)
В классе UnidirectionIntLinkedList реализовать следующие методы:
- add(int): этот метод используется для добавления элемента в конец !!! списка. 
- add(index, int): этот метод используется для добавления элемента по определенному индексу !!! в список.
- addFirst(int значение): добавляет элемент в начало списка.
- addLast(int значение): добавляет элемент в конец списка.
- int get(int index): получить элемент по index.
- int set(int index, int значение): установить значение элемента по index.
- int remove(int index): удалить элемент со списка, возвратить значение удаленного элемента
- removeFirst(): удалить элемент с начала списка.
- removeLast(): удалить элемент с конца списка.
- int indexOf(int значение): вернуть индекс первого вхождение элемента со значением
- bool contains(int значение): вернуть true, если значение есть в списке
- void clear(): очистить список


2.
a)
Найти сумму всех элементов ArrayList<Integer>.
Найти среднее значение элементов LinkedList<Integer>.
Перебрать ArrayList<String> и вывести все элементы на экран.
Перебрать LinkedList<String> и найти самую длинную строку.
Создать ArrayList с объектами вашего собственного класса и вывести их на экран.

b)
Перебрать ArrayList<Integer> и найти наименьший элемент.
Перебрать LinkedList<Integer> и найти наибольший элемент.
Перебрать ArrayList<String> и найти количество элементов, начинающихся с определенной буквы.
Перебрать LinkedList<String> и найти первое вхождение определенной строки.
Создать LinkedList с объектами вашего собственного класса и удалить все элементы, удовлетворяющие определенному условию.

c)
Перебрать ArrayList<Integer> и удалить все четные числа.
Перебрать LinkedList<Integer> и заменить все элементы, кратные 3, на нули.
Перебрать ArrayList<String> и объединить все элементы в одну строку.
Перебрать LinkedList<String> и удалить все элементы, содержащие определенную подстроку.
Создать ArrayList с объектами вашего собственного класса и вывести только те, которые удовлетворяют определенному условию.

d)
Перебрать ArrayList<Integer> и найти сумму квадратов всех элементов.
Перебрать LinkedList<Integer> и вычислить произведение всех элементов.
Перебрать ArrayList<String> и найти самую короткую строку.
Перебрать LinkedList<String> и заменить все гласные буквы в каждой строке на символ '*'.
Создать LinkedList с объектами вашего собственного класса и отсортировать их в порядке убывания.

e)
Перебрать ArrayList<Integer> и найти второй по величине элемент.
Перебрать LinkedList<Integer> и вывести все элементы в обратном порядке.
Перебрать ArrayList<String> и вывести все строки, содержащие только буквы.
Перебрать LinkedList<String> и найти самую длинную строку, не содержащую пробелов.
Создать ArrayList с объектами вашего собственного класса и отфильтровать только уникальные элементы.

f)
Перебрать ArrayList<Integer> и найти наибольшую возрастающую последовательность элементов.
Перебрать LinkedList<Integer> и удалить все дубликаты элементов.
Перебрать ArrayList<String> и создать новый список, содержащий только уникальные строки.
Перебрать LinkedList<String> и объединить все строки в одну с использованием разделителя.
Создать LinkedList с объектами вашего собственного класса и отсортировать их по нескольким критериям.